{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagination","Math","ceil","isFirstPage","isLastPage","handleButtonChange","direction","className","classNames","disabled","href","onClick","map","page","active","item","items","options","App","useState","itemPerPage","setItemPerPage","setCurrentPage","visibleItems","length","firstPageItem","lastPageItem","getVisibleItems","slice","useEffect","id","value","onChange","event","target","option","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAuBX,EAAW,EADjBY,KAAKC,KAAKN,EAAQC,IAInCM,EAA8B,IAAhBL,EACdM,EAAaN,IAAgBG,KAAKC,KAAKN,EAAQC,GAE/CQ,EAAqB,SAACC,GAC1B,OAAQA,GACN,IAAK,OACH,GAAIF,EACF,OAGFL,EAAaD,EAAc,GAC3B,MACF,IAAK,OACH,GAAIK,EACF,OAGFJ,EAAaD,EAAc,KAOjC,OACE,qBAAIS,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUN,IAFd,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAAS,kBAAMN,EAAmB,SALpC,oBAUDL,EAAWY,KAAI,SAAAC,GAAI,OAClB,oBACEN,UACEC,IACE,YACA,CAAEM,QA/CKC,EA+CaF,EA/CIf,IAAgBiB,KA2C9C,SASE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAI,WAAMZ,GACVa,QAAS,kBAAMZ,EAAac,IAJ9B,SAMGA,KAREA,GAlDK,IAACE,KA+Df,oBAAIR,UAAWC,IACb,YACA,CAAEC,SAAUL,IAFd,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAAMN,EAAmB,SALpC,wBCjFFW,EAAQ3B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MACdwB,EAAU,CAAC,EAAG,EAAG,GAAI,IAEdC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBwB,EAApB,KACMC,EAAY,YAAOP,GACnBpB,EAAQoB,EAAMQ,OACdC,EAAgB,GAAK3B,EAAc,GAAKsB,EAExCM,EAAe5B,EAAcsB,EAAcxB,EAC7CA,EACAE,EAAcsB,EAEZO,EAAkB,kBAAMJ,EAC3BK,MAAMH,EAAgB,EAAGC,IAU5B,OARAG,qBAAU,WACRP,EAAe,KACd,CAACF,IAEJS,qBAAU,WACRF,MACC,CAAC7B,IAGF,sBAAKS,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiC2B,EADjC,cACoDC,EADpD,eACuE9B,EADvE,OAIA,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAWZ,GAAgBY,EAAMC,OAAOH,QALpD,SAOGd,EAAQL,KAAI,SAAAuB,GAAM,OACjB,wBAAQJ,MAAOI,EAAf,SAAqCA,GAATA,UAKlC,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOA,EACPC,QAASuB,EACTtB,YAAaA,EACbC,aAAcuB,IAGhB,6BACGK,IAAkBf,KAAI,SAAAG,GAAI,OACzB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClElCsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bc77989a.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (currentPage: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPageItems = Math.ceil(total / perPage);\n  const pagination: number[] = getNumbers(1, totalPageItems);\n\n  const isCurrent = (item: number) => currentPage === item;\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === Math.ceil(total / perPage);\n\n  const handleButtonChange = (direction: string) => {\n    switch (direction) {\n      case 'next':\n        if (isLastPage) {\n          return;\n        }\n\n        onPageChange(currentPage + 1);\n        break;\n      case 'prev':\n        if (isFirstPage) {\n          return;\n        }\n\n        onPageChange(currentPage - 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: isFirstPage },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => handleButtonChange('prev')}\n        >\n          «\n        </a>\n      </li>\n      {pagination.map(page => (\n        <li\n          className={\n            classNames(\n              'page-item',\n              { active: isCurrent(page) },\n            )\n          }\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${currentPage}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        { disabled: isLastPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => handleButtonChange('next')}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\nconst options = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [itemPerPage, setItemPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const visibleItems = [...items];\n  const total = items.length;\n  const firstPageItem = 1 + (currentPage - 1) * itemPerPage;\n\n  const lastPageItem = currentPage * itemPerPage > total\n    ? total\n    : currentPage * itemPerPage;\n\n  const getVisibleItems = () => visibleItems\n    .slice(firstPageItem - 1, lastPageItem);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [itemPerPage]);\n\n  useEffect(() => {\n    getVisibleItems();\n  }, [currentPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstPageItem} - ${lastPageItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemPerPage}\n            onChange={(event) => setItemPerPage(+event.target.value)}\n          >\n            {options.map(option => (\n              <option value={option} key={option}>{option}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {getVisibleItems().map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}